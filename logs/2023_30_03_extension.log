---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Josua\Output\206194\/eb04_rif_contributions_bhp.log
  log type:  text
 opened on:  22 Mar 2023, 10:35:24

. 
. /*
> 
> In dem Do-File werden nach verschiedenen Gruppen-Abgrenzungen folgende Mittelwerte ausgegeben:
> -Mittelwert der RIF-Funktion für das 15. perzentil
> -Mittelwert der RIF-Funktion für das 50. perzentil
> -Mittelwert der RIF-Funktion für das 85. perzentil
> -Mittelwert der RIF-Funktion für die 85-50 Log-Lohnlücke
> -Mittelwert der RIF-Funktion für die 50-15 Log-Lohnlücke
> 
> Für jede der Ausgaben wird zusätzlich  zu einem ungewichteten Mittelwert auch eine Gewichtung  nach Firpo, Fortin und Lemieux (2013) verwendet. 
> Ein Indikator gibt in jeder Tabelle pro Zeile an ob die Gewichtung verwendet wurde.
> Die Gewichtung ist eine invers proportionale Gewichtung zu den Gruppen-Variablen für das Basisjahr 1995.
> 
> Ich gebe ganz unten zusätzlich ganz unten auch noch mal die ungewichteten 15, 50 und 85- Perzentile für Ost/West X Jahreszellen 
> und die Perzentile mit DFL-Gewichtung aus. 
> 
> HINWEIS ZUR DATENSCHUTZPRÜFUNG:
> Bei der Ausgabe der längeren Tabellen mit Mittelwerten von Einflußfunktion  unten 
> werden Zeilen mit weniger als 20 Personen und weniger als 20 Betriebs-Beobachtungen pro Mittelwert  
> automatisch gelöscht.  Damit dürften die Tabellen jetzt schon vor der Prüfung die Datenschutzanforderungen erfüllen.
> Das Precensoring wird für die Tabellen ganz unten mit DFL-gewichteten Perzentilen nicht gemacht, 
> da die Anforderungen für Perzentile anders  als für die Mittelwerte der Einflußfunktionen waren. Da dort aber immer 
> alle Beoabchtugnen in einer Ost/West X Jahreszelle verwendet werden, dürfte es trotzdem kein Problem geben.
> 
> Eine Beschreibung des Vorgehens und der Tabellen ist weiter unten über den Tabellenausgaben enthalten.
> 
> */
. 
. 
. 
. //====================================================================================
. //      0. Custom RIF Programms
. //====================================================================================
. 
. //Needed software
. fdzinstall rif
checking rif consistency and verifying not already installed...
all files already exist and are up to date.

. fdzinstall gtools
checking gtools consistency and verifying not already installed...
all files already exist and are up to date.

. 
. //Small helper program for conditional display of strings
. cap program drop displaycond

. program displaycond 
  1.         syntax anything, b(integer)
  2.         if `b'==1{
  3.                 display "`1'"
  4.         }
  5. end     

. 
. //Build a year-on-year DFL-weighting function
. cap program drop dfl_yearly

. program dfl_yearly 
  1.         version 13
  2.         syntax varlist(fv ts) [, cyear(int 1995)] gen(string) 
  3.         quietly levelsof year, local(years_in_data)
  4.         //display `years_in_data'
.         quietly local years_in_data: list years_in_data - cyear
  5.         gen `gen'=.
  6.         foreach y of local years_in_data{
  7.                 quietly{
  8.                                 tempvar period prob1 p_e0 p_e1
  9.                                 display "Computing weights for year `y'"
 10.                                 gen  `period'=.
 11.                                 gen  `prob1' =.
 12.                                 replace `period'= 1  if year == `cyear'
 13.                                 replace `period'= 0  if year == `y'
 14.                                 forvalues e=0/1{
 15.                                         logit `period' `varlist' if east==`e'
 16.                                         predict `p_e`e'' if east==`e' , p
 17.                                         replace `prob1' = `p_e`e''  if east==`e' 
 18.                                         replace `gen'=(`prob1')/(1-`prob1') if year==`y' & east==`e' 
 19.                         }
 20.                 }
 21.         }
 22.         replace `gen' = 1 if year == `cyear'
 23. end

. 
. //Export DFL reweighted RIFs (with on the fly recalculated RIF functions to account for the right within RIF weights!)
. cap program drop otf_rifs

. program otf_rifs
  1.         syntax namelist[, v byear(int 1995) mwage(string) lwage(string) name_tag(string)]
  2.         
.         //Set program inputs
.         local b_verbose = 0
  3.         if "`v'" == "v"{
  4.                 local b_verbose = 1
  5.         }
  6.         if "`mwage'"==""{
  7.                 local mwage = "mwage"
  8.         }
  9.         if "`lwage'"==""{
 10.                 local lwage = "lwage_imp"
 11.         }
 12.         
.         //Start main program loop
.         foreach vname in `namelist'{
 13.                 tempname m_unweighted m_weighted        
 14.                 local var = "`vname'"   
 15.                 forvalues i = 0/1{
 16.                         //Lookup labels
.                         tempname n_lab w_lab 
 17.                         label define `n_lab' 0 "unweighted" 1 "weighted"
 18.                         label define `w_lab' 0 "" 1 "[pw=otf_dfl]"
 19.                         //Loaded
.                         local name:  label `n_lab' `i'
 20.                         local wght:  label `w_lab' `i'
 21.                         //Output if verbose run
.                         preserve 
 22.                                 keep if year>=`byear'
 23.                                 //Only work with explicit missings (9999 should indicate missing in output)
.                                 keep if `var' !=.
 24.                                 if `i'==0 & "`mwage'"!="mwage"{
 25.                                         drop rif_85 rif_50 rif_15 w_85_50 w_50_15
 26.                                         gsort ey 
 27.                                         displaycond "Compute base RIFs for `var' for `mwage'",b(`b_verbose')
 28.                                         foreach p in "15" "50" "85"{
 29.                                                 displaycond "Compute OTF-RIF for `p'-pct.",b(`b_verbose')                                                       
 30.                                                 quietly by ey: egen rif_`p'=rifvar(`mwage'),  q(`p')
 31.                                         }
 32.                                         displaycond "Compute OTF-RIF for wage-gaps for `mwage'",b(`b_verbose')
 33.                                         quietly by ey: egen w_85_50 = rifvar(`lwage'), iqr(50 85)
 34.                                         quietly by ey: egen w_50_15 = rifvar(`lwage'), iqr(15 50)
 35.                                 }
 36.                                 if `i'==1{
 37.                                         displaycond "Compute  dfl weights for `var'",b(`b_verbose')
 38.                                         quietly dfl_yearly i.`var', cyear(`byear') gen("otf_dfl")
 39.                                         drop rif_85 rif_50 rif_15 w_85_50 w_50_15
 40.                                         gsort ey 
 41.                                         displaycond "Compute  on-the-fly weighted RIFs for `var'",b(`b_verbose')
 42.                                         foreach p in "15" "50" "85"{
 43.                                                 displaycond "Compute OTF-RIF for `p'-pct.",b(`b_verbose')                                                       
 44.                                                 quietly by ey: egen rif_`p'=rifvar(`mwage'),  q(`p') weight(otf_dfl) 
 45.                                         }
 46.                                         displaycond "Compute OTF-RIF for wage-gaps",b(`b_verbose')
 47.                                         quietly by ey: egen w_85_50 = rifvar(`lwage'), iqr(50 85) weight(otf_dfl) 
 48.                                         quietly by ey: egen w_50_15 = rifvar(`lwage'), iqr(15 50) weight(otf_dfl) 
 49.                                 }
 50.                                 //Collapse rif means and count persons
.                                 quietly gen n_obs = !missing(`var')
 51.                                 gcollapse (mean) rif_85 rif_50 rif_15  w_85_50 w_50_15 (sum) n_obs n_betr `wght', by(`var' east year)
 52.                                 sort east year `var' 
 53.                                 by east year: gegen total_p = total(n_obs)
 54.                                 gen double share = n_obs/total_p
 55.                                 rename n_obs n_persnr
 56.                                 gen ffl = `i'
 57.                                 mkmat east year `var' ffl rif_85 rif_50 rif_15 w_85_50 w_50_15 share n_persnr n_betr, mat(`m_`name'')
 58.                         restore
 59. 
.                 }
 60.         //Export to matrix
.         matrix m_`vname'`name_tag' = `m_unweighted' \ `m_weighted' 
 61.         //Correct output of persnr for FFL 
.         preserve
 62.                 local varnames: colfullnames  m_`vname'`name_tag'
 63.                 drop _all
 64.                 quietly{
 65.                         svmat m_`vname'`name_tag', names(col)
 66.                         replace n_persnr=. if ffl==1
 67.                         replace n_betr=. if ffl==1
 68.                         bys east year `var': gegen vtemp = min(n_persnr)
 69.                     bys east year `var': gegen btemp = min(n_betr)
 70.                         replace n_betr   = btemp  
 71.                         replace n_persnr = vtemp
 72.                         sort  east year `var' ffl
 73.                 }
 74.                 sort  east year `var' ffl
 75.                 mkmat east year `var' ffl rif_85 rif_50 rif_15 n_persnr n_betr, mat(r_`vname'`name_tag')
 76.             mkmat east year `var' ffl w_85_50 w_50_15 share n_persnr n_betr, mat(s_`vname'`name_tag')
 77.                 mkmat `varnames', mat(m_`vname'`name_tag')
 78.         restore
 79.         }       
 80. end

. 
. //Export DFL reweighted percentiles
. //(recalculates weights again - very slow - here Stata would need multiple datasets in memory and dynamic functions)
. cap program drop dfl_pct

. program dfl_pct
  1.         syntax namelist[, byear(int 1995)]
  2.         foreach vname in `namelist'{    
  3.         display "DFL-weighted percentiles for `vname'"
  4.                 preserve
  5.                         keep if year>=`byear'
  6.                         dfl_yearly i.`vname', cyear(`byear') gen("otf_dfl")     
  7.                         gcollapse (p15) p15 = mwage (p50) p50 = mwage  (p85) p85 = mwage [pw=otf_dfl], by(east year)
  8.                         mkmat east year p15 p50 p85, mat(m_p_dfl_`vname')
  9. 
.                 restore
 10.                 preserve
 11.                         keep if year>=`byear'
 12.                         gcollapse (sum) n_persnr n_betr, by(east year) 
 13.                     mkmat n_persnr n_betr, mat(m_obs_mat)
 14.                 restore
 15.                 matrix   m_p_dfl_`vname' = m_p_dfl_`vname', m_obs_mat
 16.         }
 17. end

. 
. cap program drop dfl_pct_custom

. program dfl_pct_custom
  1.     syntax varlist(fv ts) [,v byear(int 1995)] tag(string)
  2.         display "DFL-weighted percentiles for `tag'"
  3.                 preserve
  4.                         keep if year>=`byear'
  5.                         dfl_yearly `varlist', cyear(`byear') gen("otf_dfl")     
  6.                         gcollapse (p15) p15 = mwage (p50) p50 = mwage  (p85) p85 = mwage [pw=otf_dfl], by(east year)
  7.                         mkmat east year p15 p50 p85, mat(m_p_dfl_`tag')
  8. 
.                 restore
  9.                 preserve
 10.                         keep if year>=`byear'
 11.                         gcollapse (sum) n_persnr n_betr, by(east year) 
 12.                     mkmat n_persnr n_betr, mat(m_obs_mat)
 13.                 restore
 14.                 matrix   m_p_dfl_`tag' = m_p_dfl_`tag', m_obs_mat
 15. end

. 
. 
. //A programm to output a matrix of standard deviations of wage residuals
. cap program drop resid_sd

. program resid_sd 
  1.         version 13
  2.     syntax varlist(fv ts) [,v] tag(string)
  3.         quietly levelsof year, local(ys)
  4.         display "Computing wage residuals"
  5.         tempvar resid loop_temp  
  6.         quietly gen `resid'=. 
  7.         foreach y of local ys{
  8.                         forvalues e = 0/1{
  9.                                 quietly reg lwage_imp `varlist' if east==`e' & year == `y'
 10.                                 quietly predict `loop_temp', r
 11.                                 quietly replace `resid'= `loop_temp' if east==`e' & year == `y'
 12.                                 quietly drop `loop_temp'
 13.                         }
 14.         }
 15.         preserve
 16.             gen resid_sd = `resid'
 17.                 collapse (sd) sd=lwage_imp resid_sd (sum) n_persnr n_betr, by(east year)
 18.                 mkmat east year sd resid_sd n_persnr n_betr, mat(m_sd_`tag')
 19.         restore
 20. end

. 
. 
. //A programm to restrict the output to the FDZ-guidelines for minimal observation-number for persons and firms
. cap program drop precensor      

. program precensor, rclass
  1.          version 13
  2.     syntax namelist [,pfx_list(string)]
  3.         //Set standard prefixes (so old code just runs)
.         if "`pfx_list'"==""{
  4.                 local pfx_list = "r s"
  5.         }
  6.         display " - Pre-censoring Program for output matrices with prefixes [`pfx_list'] started - "
  7.         foreach var in `namelist'{      
  8.                 display "================ `var' ===================="
  9.                 foreach pfx of local pfx_list{
 10.                         preserve
 11.                                 drop _all
 12.                                 quietly svmat `pfx'_`var', names(col)
 13.                                 local varnames: colfullnames  `pfx'_`var'
 14.                                 quietly gen not_enough_pers = (n_persnr <= 20)
 15.                                 quietly egen prob_pers = total(not_enough_pers)
 16.                                 quietly gen not_enough_betr = (n_betr <= 20)
 17.                                 quietly egen prob_betr = total(not_enough_betr)
 18.                                 quietly sum prob_pers, detail
 19.                                 local probs = r(mean)
 20.                                 display "`var' has `probs' person-problem cases that are precensored in the `pfx'_`var' table"
 21.                                 //This parts is uncommented for the presentation mode
.                                 /*
>                                 if `probs'>0 {
>                                         tempname l_detail
>                                         mkmat east year `varnames' if not_enough_pers, mat(`l_detail')
>                                         matrix list `l_detail'
>                                 }
>                                 */
.                                 quietly sum prob_betr, detail
 22.                                 local probs = r(mean)
 23.                                 display "`var' has `probs' establishment-problem cases that are precensored in the `pfx'_`var' table"
 24.                                 
.                                 
.                                 //This parts is uncommented for the presentation mode
.                                 //if `probs'>0 {
.                                 //      tempname l_detail
.                                 //      mkmat east year `var' if not_enough_pers, mat(`l_detail')
.                                 //      matrix list `l_detail'
.                                 //}
.                                 quietly drop if not_enough_pers
 25.                                 quietly drop if not_enough_betr
 26.                                 quietly drop not_enough_pers prob_pers not_enough_betr prob_betr
 27.                                 mkmat `varnames', mat(`pfx'_`var')
 28.                         restore
 29.                 }
 30.                 display "->Pre-censoring for `var' complete" _newline
 31.         }
 32. end

. 
. //Output FFL tables
. cap program drop output_mtx

. program output_mtx
  1.         syntax namelist
  2.         foreach name in `namelist'{
  3.                 display _newline
  4.                 display "Ausgabe der RIF-Werte für Perzentile mit und ohne Gewichtung"
  5.                 display ". matrix list r_`name'"
  6.                 matrix list r_`name'
  7.                 display _newline
  8.                 display "Ausgabe der RIF-Werte für Lohnluecken und Gruppen-Anteile mit und ohne Gewichtung"
  9.                 display ". matrix list s_`name'"
 10.                 matrix list s_`name'
 11.         }
 12. end

. 
. /*=============================================================
>         BHP. Prepare BHP data
> ===============================================================*/
. 
. use "${orig}/siab_7517_v1_bhp_v1_1995.dta", clear
(SIAB 7517 (v1), 26 Jun 2019, administrative Betriebsdaten)

. forvalues y=1996/2017{
  2.         append using  "${orig}/siab_7517_v1_bhp_v1_`y'.dta"
  3. }
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(variable az_ab65_vz was byte, now int to accommodate using data's values)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(variable az_niv1 was byte, now int to accommodate using data's values)
(variable az_niv2 was byte, now int to accommodate using data's values)
(variable az_niv3 was byte, now int to accommodate using data's values)
(variable az_niv4 was byte, now int to accommodate using data's values)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(variable az_niv2 was int, now long to accommodate using data's values)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)
(label miss_de already defined)
(label miss_en already defined)

. 
. //Merge new data from the BHP-Basis here.
. merge m:1 betnr jahr using "${orig}/siab_7517_v1_bhp_basis_v1.dta"
(label miss_de already defined)
(label miss_en already defined)

    Result                      Number of obs
    -----------------------------------------
    Not matched                     4,658,523
        from master                         0  (_merge==1)
        from using                  4,658,523  (_merge==2)

    Matched                         9,281,933  (_merge==3)
    -----------------------------------------

. drop if _merge==2
(4,658,523 observations deleted)

. drop _merge

. 
. // Number of men working full-time
. generate az_m_vz = az_vz - az_f_vz

. // Mean imputed gross average daily wage for men (working full-time)
. generate te_imp_mw_m = ((az_vz*te_imp_mw)-(az_f_vz*te_imp_mw_f)) / (az_vz-az_f_vz) if az_vz != az_f_vz & az_f_vz > 0
(3,718,444 missing values generated)

. //Exception: establishments with entire workforce composed of men working full-time:
. replace te_imp_mw_m = te_imp_mw if az_f_vz == 0
(2,460,100 real changes made, 1,046,662 to missing)

. 
. save "${data}/bhp_combined.dta", replace
file \\a0018022.dst.baintern.de\Projekte\usr\fdz1489\data\/bhp_combined.dta saved

. 
. /*=============================================================
>         1. Compute base variables (Groups/RIFs)
> ===============================================================*/
. 
. //load SIAB data
. use "${data}/siab_panel.dta", clear
(FDZ1489 SIAB Panel - 20 Sep 2022 - 18:37:53)

. drop if female==1
(2,933,099 observations deleted)

. drop if east   == .
(/ observations deleted)

. 
. set matsize 10000

. 
. //merge AKM
. merge m:1 persnr using "${orig}/SIAB_7517_v1_akm_pers.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                       679,048
        from master                    20,021  (_merge==1)
        from using                    659,027  (_merge==2)

    Matched                         5,655,805  (_merge==3)
    -----------------------------------------

. drop if _merge ==2
(659,027 observations deleted)

. drop _merge

. 
. merge m:1 betnr using "${orig}/SIAB_7517_v1_akm_estab.dta"
(label miss_en already defined)
(label miss_de already defined)

    Result                      Number of obs
    -----------------------------------------
    Not matched                     1,405,171
        from master                    17,601  (_merge==1)
        from using                  1,387,570  (_merge==2)

    Matched                         5,658,225  (_merge==3)
    -----------------------------------------

. drop if _merge==2
(1,387,570 observations deleted)

. drop _merge

. 
. //Merge new data from the BHP-Basis here.
. merge m:1 betnr jahr using "${data}/bhp_combined.dta"
(label miss_de already defined)
(label miss_en already defined)
(label ao_kreis_de already defined)
(label ao_kreis_en already defined)
(label group_w08_3_de already defined)
(label group_w08_3_en already defined)
(label group_w73_3_de already defined)
(label group_w73_3_en already defined)
(label group_w93_3_de already defined)
(label group_w93_3_en already defined)
(label w03_5_de already defined)
(label w03_5_en already defined)
(label w08_3_gen_de already defined)
(label w08_3_gen_en already defined)
(label w08_5_de already defined)
(label w08_5_en already defined)
(label w73_3_de already defined)
(label w73_3_en already defined)
(label w73_3_gen_de already defined)
(label w73_3_gen_en already defined)
(label w93_3_gen_de already defined)
(label w93_3_gen_en already defined)
(label w93_5_de already defined)
(label w93_5_en already defined)

    Result                      Number of obs
    -----------------------------------------
    Not matched                     6,213,508
        from master                         0  (_merge==1)
        from using                  6,213,508  (_merge==2)

    Matched                         5,675,826  (_merge==3)
    -----------------------------------------

. drop if _merge==2
(6,213,508 observations deleted)

. drop _merge

. 
. 
. /*
> Time bands where we might have reliable AKM effects for the EAST if we want the contemporaneous AKM Effect
> instead of the 1998 effect 
> 1998-2004
> 2003-2010
> 2010-2017
> */
. 
. //Contemporaneous Fixed-Effects
. gen contemp_ffe = .
(5,675,826 missing values generated)

. replace contemp_ffe = feff_1998_2004 if year <2003
(1,977,814 real changes made)

. replace contemp_ffe = feff_2003_2010 if year >=2003 & year <2010
(1,616,252 real changes made)

. replace contemp_ffe = feff_2010_2017 if year >=2010 & year <=2017
(1,947,266 real changes made)

.         
. gen contemp_pfe = .
(5,675,826 missing values generated)

. replace contemp_pfe = peff_1998_2004 if year <2003
(1,917,905 real changes made)

. replace contemp_pfe = peff_2003_2010 if year >=2003 & year <2010
(1,594,648 real changes made)

. replace contemp_pfe = peff_2010_2017 if year >=2010 & year <=2017       
(1,921,518 real changes made)

.         
.         
. //Quartiles of contemporaneous FE 
. gquantiles q_firm  = contemp_ffe, xtile nq(4) by(east year)

. gquantiles q_pers  = contemp_pfe, xtile nq(4) by(east year)

. 
. tab q_firm east,m

           |         east
    q_firm |      west       east |     Total
-----------+----------------------+----------
         1 | 1,147,418    237,956 | 1,385,374 
         2 | 1,147,429    237,957 | 1,385,386 
         3 | 1,147,424    237,948 | 1,385,372 
         4 | 1,147,294    237,906 | 1,385,200 
         . |   102,140     32,354 |   134,494 
-----------+----------------------+----------
     Total | 4,691,705    984,121 | 5,675,826 

. tab q_pers east,m

           |         east
    q_pers |      west       east |     Total
-----------+----------------------+----------
         1 | 1,123,991    234,564 | 1,358,555 
         2 | 1,123,961    234,548 | 1,358,509 
         3 | 1,123,964    234,547 | 1,358,511 
         4 | 1,123,955    234,541 | 1,358,496 
         . |   195,834     45,921 |   241,755 
-----------+----------------------+----------
     Total | 4,691,705    984,121 | 5,675,826 

. 
. //firm fixed effect classes within east and year
. gquantiles wr  = contemp_ffe, xtile nq(20) by(east year)

. 
. //Use w93_3_gen to create 2-digit industries
. gen ind2d = floor(w93_3_gen/10)
(113 missing values generated)

. 
. //Get rid of industry missings
. drop if missing(w93_3_gen)
(113 observations deleted)

. 
. //Service Industry dummy
. gen d_services = (w93_3_gen>=501)       

. gquantiles serv_fe  = contemp_ffe, xtile nq(2) by(east year d_services)

. tab serv_fe d_services

           |      d_services
   serv_fe |         0          1 |     Total
-----------+----------------------+----------
         1 | 1,380,493  1,390,510 | 2,771,003 
         2 | 1,379,889  1,390,396 | 2,770,285 
-----------+----------------------+----------
     Total | 2,760,382  2,780,906 | 5,541,288 

. //Service FE interaction
. gegen serv_int = group(serv_fe d_services)

. tab serv_int d_services

           |      d_services
  serv_int |         0          1 |     Total
-----------+----------------------+----------
         1 | 1,380,493          0 | 1,380,493 
         2 |         0  1,390,510 | 1,390,510 
         3 | 1,379,889          0 | 1,379,889 
         4 |         0  1,390,396 | 1,390,396 
-----------+----------------------+----------
     Total | 2,760,382  2,780,906 | 5,541,288 

. tab serv_int serv_fe

           |        serv_fe
  serv_int |         1          2 |     Total
-----------+----------------------+----------
         1 | 1,380,493          0 | 1,380,493 
         2 | 1,390,510          0 | 1,390,510 
         3 |         0  1,379,889 | 1,379,889 
         4 |         0  1,390,396 | 1,390,396 
-----------+----------------------+----------
     Total | 2,771,003  2,770,285 | 5,541,288 

.   
. //Online sector defintion
. gen sector_d = .
(5,675,713 missing values generated)

. replace sector_d = 1 if inrange(w93_3_gen,11,145)                //Agriculture/Mining
(93,590 real changes made)

. replace sector_d = 2 if inrange(w93_3_gen,151,372)               //Manufacturing
(2,025,826 real changes made)

. replace sector_d = 3 if inrange(w93_3_gen,451,454)               //Construction
(610,874 real changes made)

. replace sector_d = 4 if inrange(w93_3_gen,501,954)               //Services
(2,855,590 real changes made)

. replace sector_d = 5 if inrange(w93_3_gen,401,410)               //Utilites
(80,447 real changes made)

. 
. gen construction = sector_d == 3

. 
. //Firm size quartiles
. sum az_ges, detail

                 Anzahl Beschaeftigte gesamt
-------------------------------------------------------------
      Percentiles      Smallest
 1%            2              1
 5%            4              /
10%            8              /       Obs           5,675,713
25%           25              /       Sum of wgt.   5,675,713

50%          107                      Mean           1223.087
                        Largest       Std. dev.      4838.172
75%          469              /
90%         1839              /       Variance       2.34e+07
95%         4857              /       Skewness       7.428217
99%        28312          64140       Kurtosis        67.5496

. gquantiles fs_quant = az_ges, xtile nq(4) by(year)

. replace    fs_quant = 9999 if fs_quant == .
(/ real changes made)

. 
. 
. //Bet and Persnr for the collapse counters
. gsort betnr 

. by betnr: gen n_betr = _n==_N

. gsort persnr 

. by persnr: gen n_persnr = _n==_N

. 
. //Compute percentiles without missing values in our main explanatory 
. preserve

.         gcollapse (p15) p15 = mwage (p50) p50 = mwage  (p85) p85 = mwage (sum) n_persnr n_betr, by(east year)

.         mkmat east year p15 p50 p85 n_persnr n_betr, mat(m_pct)

. restore

. 
. //Compute percentiles without missing values in our main explanatory variable
. preserve

.         gcollapse (p15) p15 = mwage (p50) p50 = mwage  (p85) p85 = mwage (sum) n_persnr n_betr, by(east year)

.         mkmat east year p15 p50 p85 n_persnr n_betr, mat(m_pct_nm)

. restore

. 
. //Compute percentiles of AKM firm fixed-effects 
. preserve

.         gcollapse (p15) p15 = contemp_ffe (p50) p50 = contemp_ffe  (p85) p85 = contemp_ffe (sum) n_persnr n_betr, by(east year)

.         mkmat east year p15 p50 p85 n_persnr n_betr, mat(m_pct_akm)

. restore

. 
. quietly: reg mwage i.wr##i.east##i.year

. predict firm_mwage 
(option xb assumed; fitted values)
(134,425 missing values generated)

. gen l_fw = log(firm_mwage)
(134,425 missing values generated)

. predict non_firm_wage, r
(134,425 missing values generated)

. 
. //Compute percentiles of non-firm wage
. preserve

.         gcollapse (p15) p15 = non_firm_wage (p50) p50 = non_firm_wage  (p85) p85 = non_firm_wage (sum) n_persnr n_betr, by(east year)

.         mkmat east year p15 p50 p85 n_persnr n_betr, mat(m_pct_nfw)

. restore

. 
. //Compute percentiles of firm-specific wage components
. preserve

.         gcollapse (p15) p15 = firm_mwage (p50) p50 = firm_mwage  (p85) p85 = firm_mwage (sum) n_persnr n_betr, by(east year)

.         mkmat east year p15 p50 p85 n_persnr n_betr, mat(m_pct_fw)

. restore

. 
. //For a faster first run we restrict everyting to just some test years.
. //keep if year == 1995 | year == 2009 | year==2015
. 
. 
. gegen ey = group(east year)

. gsort ey 

. foreach p in "15" "50" "85"{
  2.         display "Compute RIF for `p'-pct."
  3.         by ey: egen rif_`p'=rifvar(mwage),  q(`p') 
  4. }
Compute RIF for 15-pct.
Compute RIF for 50-pct.
Compute RIF for 85-pct.

. 
. by ey: egen w_85_50 = rifvar(lwage_imp), iqr(50 85)

. by ey: egen w_50_15 = rifvar(lwage_imp), iqr(15 50)

. 
. rename beruf occ3

. 
. 
. //====================================================================================
. //      3. Run the caluclations
. //====================================================================================
. 
. 
. //Compute standard deviations of wages
. resid_sd i.educ i.age_q, tag(educ)
Computing wage residuals
(70,833 missing values generated)

. resid_sd i.educ i.age_q i.ind2d, tag(ind2d)
Computing wage residuals
(70,833 missing values generated)

. resid_sd i.educ i.age_q i.ind2d i.occ3, tag(occ3)
Computing wage residuals
(127,532 missing values generated)

. resid_sd i.educ i.age_q i.ind2d i.occ3 contemp_ffe, tag(firm_fe)
Computing wage residuals
(257,505 missing values generated)

. 
. /*Hier werden fünf verschiedene Tabellen mit Standardabweichungen der Log-Löhne und Standard-Abweichungen von Log-Lohnresidualen für Ost/West X Jahres-zellen ausgegeben 
> für unterschiedliche Mincer-Gleichungen ausgebenen. Jede Tabelle entspricht einer der Spezifikationen des Programms resid_sd weiter oben. Es werden immer alle Beobachtungen 
> in einer Ost/West X Jahres-zelle genutzt und die Beobachtungszahlen für Personen und Betriebe sind in den letzten beiden Spalten angegeben. 
> 
>  */
. 
. matrix list m_sd_educ

m_sd_educ[46,6]
          east       year         sd   resid_sd   n_persnr     n_betr
 r1          0       1995  .37487543  .31696558      35221      14483
 r2          0       1996  .37612233   .3209669      26047      13942
 r3          0       1997  .38876131  .33098036      21828      14129
 r4          0       1998  .40323037   .3392038      19789      14286
 r5          0       1999  .41577947  .34946522      18437      15180
 r6          0       2000  .42121267  .35470816      17947      16296
 r7          0       2001  .42815596  .36005312      17202      16401
 r8          0       2002  .43769166  .36697838      15915      15681
 r9          0       2003  .44509783  .37336409      14576      13964
r10          0       2004  .45733094  .38386086      13845      13362
r11          0       2005  .46634093  .39083317      12878      11894
r12          0       2006   .4792712  .40273654      13370      12335
r13          0       2007  .48844016  .41115308      14111      12599
r14          0       2008  .49295908  .41653323      14477      13305
r15          0       2009  .48809311  .41076425      14035      12642
r16          0       2010  .49811289  .41915259      14744      13373
r17          0       2011  .49048883  .41060534      15680      13232
r18          0       2012  .47872537  .40064979      16743      12893
r19          0       2013  .47379267   .3955113      17680      13147
r20          0       2014  .47407728  .39547974      19334      13762
r21          0       2015  .47027403   .3914887      22048      14548
r22          0       2016  .46747163  .38886133      26192      18575
r23          0       2017  .46671852  .38653809      34183     111516
r24          1       1995  .37754124   .3312014      10383       6755
r25          1       1996  .38521576  .33912632       7530       6362
r26          1       1997  .39514625  .34603187       5959       6190
r27          1       1998  .41015631  .35686657       5137       5912
r28          1       1999  .41997242  .36308193       4708       6075
r29          1       2000  .42747366  .36994708       4341       6158
r30          1       2001  .43737683  .37606302       3832       5463
r31          1       2002  .44966134  .38646778       3447       4781
r32          1       2003  .45982274  .39598072       3141       4315
r33          1       2004  .47125882  .40644446       2976       4165
r34          1       2005  .47671142  .41144928       2621       3458
r35          1       2006   .4905611  .42264417       2716       3342
r36          1       2007  .49493822  .42733866       2833       3384
r37          1       2008  .49685484  .42970181       3081       3500
r38          1       2009  .50519872  .43697163       3054       3377
r39          1       2010  .51239407  .44125268       3176       3737
r40          1       2011  .49230498  .41907725       3379       3540
r41          1       2012  .47753489  .40704405       3408       3333
r42          1       2013  .46999604  .40164396       3696       3486
r43          1       2014  .46761036  .39946896       4068       3631
r44          1       2015  .44459879  .37924787       4484       3597
r45          1       2016  .44239914  .37707001       5298       4548
r46          1       2017  .43785018  .37343767       6641      26352

. matrix list m_sd_ind2d

m_sd_ind2d[46,6]
          east       year         sd   resid_sd   n_persnr     n_betr
 r1          0       1995  .37487543  .29508719      35221      14483
 r2          0       1996  .37612233  .29737681      26047      13942
 r3          0       1997  .38876131  .30622813      21828      14129
 r4          0       1998  .40323037  .31401592      19789      14286
 r5          0       1999  .41577947  .32328945      18437      15180
 r6          0       2000  .42121267  .32598412      17947      16296
 r7          0       2001  .42815596  .33089995      17202      16401
 r8          0       2002  .43769166  .33639431      15915      15681
 r9          0       2003  .44509783  .34127131      14576      13964
r10          0       2004  .45733094  .34947678      13845      13362
r11          0       2005  .46634093  .35487139      12878      11894
r12          0       2006   .4792712  .36433125      13370      12335
r13          0       2007  .48844016  .36984271      14111      12599
r14          0       2008  .49295908  .37473854      14477      13305
r15          0       2009  .48809311  .37339401      14035      12642
r16          0       2010  .49811289   .3792308      14744      13373
r17          0       2011  .49048883  .37070987      15680      13232
r18          0       2012  .47872537  .36204368      16743      12893
r19          0       2013  .47379267  .35825717      17680      13147
r20          0       2014  .47407728  .35779777      19334      13762
r21          0       2015  .47027403  .35419089      22048      14548
r22          0       2016  .46747163  .35199732      26192      18575
r23          0       2017  .46671852  .35084614      34183     111516
r24          1       1995  .37754124  .31356636      10383       6755
r25          1       1996  .38521576   .3191455       7530       6362
r26          1       1997  .39514625  .32438445       5959       6190
r27          1       1998  .41015631  .33363613       5137       5912
r28          1       1999  .41997242  .33823839       4708       6075
r29          1       2000  .42747366  .34335488       4341       6158
r30          1       2001  .43737683  .34941545       3832       5463
r31          1       2002  .44966134  .35671604       3447       4781
r32          1       2003  .45982274  .36543939       3141       4315
r33          1       2004  .47125882  .37533018       2976       4165
r34          1       2005  .47671142   .3768039       2621       3458
r35          1       2006   .4905611  .38718873       2716       3342
r36          1       2007  .49493822  .39218831       2833       3384
r37          1       2008  .49685484  .39331365       3081       3500
r38          1       2009  .50519872  .40131024       3054       3377
r39          1       2010  .51239407  .40396824       3176       3737
r40          1       2011  .49230498  .38356361       3379       3540
r41          1       2012  .47753489  .37248477       3408       3333
r42          1       2013  .46999604  .36895236       3696       3486
r43          1       2014  .46761036  .36544198       4068       3631
r44          1       2015  .44459879  .34804353       4484       3597
r45          1       2016  .44239914  .34582242       5298       4548
r46          1       2017  .43785018  .34453395       6641      26352

. matrix list m_sd_occ3

m_sd_occ3[46,6]
          east       year         sd   resid_sd   n_persnr     n_betr
 r1          0       1995  .37487543  .26644373      35221      14483
 r2          0       1996  .37612233  .26837718      26047      13942
 r3          0       1997  .38876131  .27662203      21828      14129
 r4          0       1998  .40323037  .28431159      19789      14286
 r5          0       1999  .41577947  .29238084      18437      15180
 r6          0       2000  .42121267  .29373196      17947      16296
 r7          0       2001  .42815596  .29734749      17202      16401
 r8          0       2002  .43769166  .30186793      15915      15681
 r9          0       2003  .44509783  .30447426      14576      13964
r10          0       2004  .45733094  .31181702      13845      13362
r11          0       2005  .46634093  .31665725      12878      11894
r12          0       2006   .4792712  .32519525      13370      12335
r13          0       2007  .48844016  .32880318      14111      12599
r14          0       2008  .49295908   .3326835      14477      13305
r15          0       2009  .48809311  .33172184      14035      12642
r16          0       2010  .49811289  .33718175      14744      13373
r17          0       2011  .49048883  .32685465      15680      13232
r18          0       2012  .47872537  .31620714      16743      12893
r19          0       2013  .47379267  .31317323      17680      13147
r20          0       2014  .47407728  .31276318      19334      13762
r21          0       2015  .47027403   .3086386      22048      14548
r22          0       2016  .46747163  .30646259      26192      18575
r23          0       2017  .46671852  .30551392      34183     111516
r24          1       1995  .37754124  .28277084      10383       6755
r25          1       1996  .38521576  .28741956       7530       6362
r26          1       1997  .39514625  .29152665       5959       6190
r27          1       1998  .41015631  .30039459       5137       5912
r28          1       1999  .41997242  .30361855       4708       6075
r29          1       2000  .42747366  .30771071       4341       6158
r30          1       2001  .43737683  .31342053       3832       5463
r31          1       2002  .44966134  .31844154       3447       4781
r32          1       2003  .45982274  .32551092       3141       4315
r33          1       2004  .47125882  .33325395       2976       4165
r34          1       2005  .47671142  .33521467       2621       3458
r35          1       2006   .4905611  .34607619       2716       3342
r36          1       2007  .49493822   .3505173       2833       3384
r37          1       2008  .49685484  .35110041       3081       3500
r38          1       2009  .50519872  .35915649       3054       3377
r39          1       2010  .51239407   .3605538       3176       3737
r40          1       2011  .49230498  .34126174       3379       3540
r41          1       2012  .47753489  .32840955       3408       3333
r42          1       2013  .46999604  .32485923       3696       3486
r43          1       2014  .46761036  .32307127       4068       3631
r44          1       2015  .44459879   .3058441       4484       3597
r45          1       2016  .44239914  .30364871       5298       4548
r46          1       2017  .43785018  .30131742       6641      26352

. matrix list m_sd_firm_fe

m_sd_firm_fe[46,6]
          east       year         sd   resid_sd   n_persnr     n_betr
 r1          0       1995  .37487543  .23558518      35221      14483
 r2          0       1996  .37612233   .2357868      26047      13942
 r3          0       1997  .38876131   .2428806      21828      14129
 r4          0       1998  .40323037  .24735136      19789      14286
 r5          0       1999  .41577947  .25159043      18437      15180
 r6          0       2000  .42121267  .25153959      17947      16296
 r7          0       2001  .42815596  .25458705      17202      16401
 r8          0       2002  .43769166  .25790542      15915      15681
 r9          0       2003  .44509783  .26005188      14576      13964
r10          0       2004  .45733094  .26368234      13845      13362
r11          0       2005  .46634093  .26577577      12878      11894
r12          0       2006   .4792712   .2695356      13370      12335
r13          0       2007  .48844016  .27300951      14111      12599
r14          0       2008  .49295908  .27515772      14477      13305
r15          0       2009  .48809311  .27439421      14035      12642
r16          0       2010  .49811289  .28041139      14744      13373
r17          0       2011  .49048883  .27474955      15680      13232
r18          0       2012  .47872537  .26584882      16743      12893
r19          0       2013  .47379267  .26436272      17680      13147
r20          0       2014  .47407728  .26445809      19334      13762
r21          0       2015  .47027403  .26227045      22048      14548
r22          0       2016  .46747163  .26169991      26192      18575
r23          0       2017  .46671852  .26286548      34183     111516
r24          1       1995  .37754124  .23187114      10383       6755
r25          1       1996  .38521576  .22895801       7530       6362
r26          1       1997  .39514625   .2283756       5959       6190
r27          1       1998  .41015631  .22744089       5137       5912
r28          1       1999  .41997242  .22951494       4708       6075
r29          1       2000  .42747366  .23173118       4341       6158
r30          1       2001  .43737683  .23502418       3832       5463
r31          1       2002  .44966134  .23615976       3447       4781
r32          1       2003  .45982274  .24519622       3141       4315
r33          1       2004  .47125882  .24856737       2976       4165
r34          1       2005  .47671142  .25148135       2621       3458
r35          1       2006   .4905611  .25417152       2716       3342
r36          1       2007  .49493822  .25926587       2833       3384
r37          1       2008  .49685484   .2585988       3081       3500
r38          1       2009  .50519872  .26298898       3054       3377
r39          1       2010  .51239407  .26634887       3176       3737
r40          1       2011  .49230498  .25737894       3379       3540
r41          1       2012  .47753489  .24719068       3408       3333
r42          1       2013  .46999604  .24580827       3696       3486
r43          1       2014  .46761036    .245055       4068       3631
r44          1       2015  .44459879  .23566759       4484       3597
r45          1       2016  .44239914  .23707077       5298       4548
r46          1       2017  .43785018  .23852137       6641      26352

. 
. 
. //3a. OTF and DFL standard outputs
. //..........................................
. global g_vars = "occ3 construction"

. //global g_vars = "q_firm fs_quant ind2d"
. //otf_rifs $g_vars ,v
. dfl_pct  $g_vars
DFL-weighted percentiles for occ3
(/ observations deleted)
(5,675,713 missing values generated)
(271,758 real changes made)
(/ observations deleted)
DFL-weighted percentiles for construction
(/ observations deleted)
(5,675,713 missing values generated)
(271,758 real changes made)
(/ observations deleted)

. dfl_pct_custom i.construction i.occ3,tag(const_occ)
DFL-weighted percentiles for const_occ
(/ observations deleted)
(5,675,713 missing values generated)
(271,758 real changes made)
(/ observations deleted)

. 
. //otf_rifs sector_d,v lwage("l_fw") mwage("firm_mwage")
. 
. //Tag the variables that are not wage variables (Here is an extra option that allows us to tag identical variables)
. //otf_rifs d_services,v lwage("contemp_ffe") mwage("mw_ffe") name_tag("_x")
. 
. //3b. Variation shares of firm-FE by  var
. //..........................................
. 
. //gen onlyones = 1 // A hack to output the overall variation shares
. //wr_variation onlyones d_services sector_d
. 
. matrix dir
    m_p_dfl_const_occ[46,7]
    m_obs_mat[46,2]
    m_p_dfl_construction[46,7]
    m_p_dfl_occ3[46,7]
    m_sd_firm_fe[46,6]
    m_sd_occ3[46,6]
    m_sd_ind2d[46,6]
    m_sd_educ[46,6]
     m_pct_fw[46,7]
    m_pct_nfw[46,7]
    m_pct_akm[46,7]
     m_pct_nm[46,7]
        m_pct[46,7]

. 
. //Entferne Tabellenzeilen die zu wenige Personen- oder Betriebsbeobachtungen  enthalten 
. //precensor $g_vars sector_d
. //precensor onlyones d_services sector_d, pfx_list("wr")
. 
. 
. /*Ab hier erfolgt noch eine Ausgabe von DFL-gewichteten Perzentilen mit Gewichtungen (nach verschiedenen Firmenabgrenzungen auf Basis der AKM-Effekte).
> Es werden 6 Tabellen ausgegeben. Die erste enthält ungewichtete Perzentile für Ost/West X Jahres-zellen. Die anderen drei nutzen jeweil eine Gewichtung.
> Die Gewichtung bildet die Bevölkerungsanteile für die jeweilige Variable in 1995 ab. 
> 
>  Struktur der Tabllen
>  1. east       = "Indikator fuer Ost/Westdeutschland"
>  2. year       = "Jahr"
>  3. p15        = "15-Perzentil der Lohnverteilung"
>  4. p50        = "Median der Lohnverteilung"
>  5. p85        = "85-Perzentil der Lohnverteilung"
>  6. n_pers     = "Fuer die Berechnung verwendete Anzahl an Personen-Beobachtungen"
>  7. n_Betr     = "Fuer die Berechnung verwendete Anzahl an Betrieben"
>  
>  Diese Ausgaben sind nicht durch das Pre-censoring Programm gelaufen, basieren aber immer auf einer kompletten Ost/West-Jahreszelle
>  
>  */
. 
. display "Ausgabe der Perzentile in Ost/West x Jahres-zellen ohne Gewichtung"
Ausgabe der Perzentile in Ost/West x Jahres-zellen ohne Gewichtung

. matrix list m_pct

m_pct[46,7]
          east       year        p15        p50        p85   n_persnr     n_betr
 r1          0       1995    2525.55  3385.2559  5133.2178      35221      14483
 r2          0       1996  2515.3079  3372.2656  5109.7734      26047      13942
 r3          0       1997  2479.9668    3343.04  5104.7881      21828      14129
 r4          0       1998  2481.4087  3371.5483   5229.564      19789      14286
 r5          0       1999  2479.3909  3409.0715  5336.6914      18437      15180
 r6          0       2000  2463.0869  3422.3801  5367.2622      17947      16296
 r7          0       2001  2444.1814  3412.8052  5384.9683      17202      16401
 r8          0       2002  2451.6936  3446.4797  5452.6992      15915      15681
 r9          0       2003  2450.8428  3466.3911  5588.3823      14576      13964
r10          0       2004   2385.675  3426.3643  5567.2852      13845      13362
r11          0       2005   2352.634   3422.447  5608.0024      12878      11894
r12          0       2006  2296.0027  3397.7798  5617.3936      13370      12335
r13          0       2007  2223.6416  3360.2734  5609.8501      14111      12599
r14          0       2008   2188.354  3347.2837   5570.084      14477      13305
r15          0       2009  2217.0964  3353.4536  5620.1318      14035      12642
r16          0       2010  2185.1187  3373.0752  5668.9204      14744      13373
r17          0       2011  2177.7852  3370.2659  5671.5781      15680      13232
r18          0       2012  2196.4719  3377.6567  5680.8486      16743      12893
r19          0       2013  2223.0859  3407.1003   5730.165      17680      13147
r20          0       2014   2243.293  3466.1628  5824.1304      19334      13762
r21          0       2015   2248.814  3494.8831  5885.9082      22048      14548
r22          0       2016   2268.324  3517.0188  5951.2676      26192      18575
r23          0       2017       2274  3541.4995  5989.1953      34183     111516
r24          1       1995  1723.2194  2363.6143  3612.6653      10383       6755
r25          1       1996  1717.0333  2379.8237  3662.3823       7530       6362
r26          1       1997  1695.9639  2352.0386  3668.4578       5959       6190
r27          1       1998  1678.9539  2356.6199  3746.1899       5137       5912
r28          1       1999  1675.9775   2361.978  3823.4355       4708       6075
r29          1       2000  1669.0878  2371.5757  3908.5981       4341       6158
r30          1       2001  1662.9674  2372.3547  3957.4915       3832       5463
r31          1       2002  1674.1643  2428.0996  4090.6655       3447       4781
r32          1       2003  1671.9896  2420.2236  4149.1699       3141       4315
r33          1       2004  1616.9474  2389.5049  4096.3906       2976       4165
r34          1       2005  1613.6166  2396.6509  4143.0635       2621       3458
r35          1       2006  1561.6443  2346.4766  4075.3162       2716       3342
r36          1       2007  1527.3671  2309.3914  4040.9165       2833       3384
r37          1       2008  1510.5197  2297.3728  4027.7219       3081       3500
r38          1       2009   1529.295  2323.3853  4137.3555       3054       3377
r39          1       2010  1510.2362  2299.4902   4176.209       3176       3737
r40          1       2011  1538.2465  2324.6707  4177.6367       3379       3540
r41          1       2012  1571.4916  2352.2795  4214.2427       3408       3333
r42          1       2013  1597.8519  2374.4097  4209.3945       3696       3486
r43          1       2014  1630.3258  2435.3164  4303.1948       4068       3631
r44          1       2015   1697.552  2485.3438  4392.9526       4484       3597
r45          1       2016  1736.7141  2534.5088  4460.3574       5298       4548
r46          1       2017  1785.5997  2588.9995  4536.2979       6641      26352

. display "Ausgabe der Perzentile der AKM-Firmeneffekt"
Ausgabe der Perzentile der AKM-Firmeneffekt

. matrix list m_pct_akm 

m_pct_akm[46,7]
           east        year         p15         p50         p85    n_persnr      n_betr
 r1           0        1995   .02518404   .18139565   .31303763       35221       14483
 r2           0        1996    .0215259   .17914605   .31165314       26047       13942
 r3           0        1997   .01701219   .17688072   .31066537       21828       14129
 r4           0        1998   .01352678   .17544091   .30862665       19789       14286
 r5           0        1999   .00645728   .17200577    .3056829       18437       15180
 r6           0        2000   .00355344   .17224354   .30863857       17947       16296
 r7           0        2001  -.00005739   .17115265   .30984187       17202       16401
 r8           0        2002  -.00103826   .17263025   .31284285       15915       15681
 r9           0        2003  -.34484076  -.14929307   .01053561       14576       13964
r10           0        2004  -.35213113  -.15242803   .01052199       13845       13362
r11           0        2005  -.35394192  -.15245426    .0122354       12878       11894
r12           0        2006  -.36428928  -.15671265   .01010767       13370       12335
r13           0        2007  -.37761235  -.16200066   .00780378       14111       12599
r14           0        2008  -.37837052  -.16051257   .01020701       14477       13305
r15           0        2009  -.37322474  -.16031706   .00929245       14035       12642
r16           0        2010   .20916343   .40853786   .56164122       14744       13373
r17           0        2011    .2079463   .40786517   .56056786       15680       13232
r18           0        2012   .21266305   .40868783    .5600419       16743       12893
r19           0        2013   .21422541   .40787029    .5578866       17680       13147
r20           0        2014   .21337557   .40727949    .5575552       19334       13762
r21           0        2015   .21051228   .40604806   .55687046       22048       14548
r22           0        2016   .20729649   .40410733    .5552516       26192       18575
r23           0        2017   .20566881   .40275347   .55253553       34183      111516
r24           1        1995  -.25591493  -.02990875   .16896057       10383        6755
r25           1        1996  -.26287484  -.03873411   .16468275        7530        6362
r26           1        1997  -.26792192  -.04393169   .15763462        5959        6190
r27           1        1998  -.27291036  -.04932235   .15062416        5137        5912
r28           1        1999  -.28386927  -.05938867   .14352703        4708        6075
r29           1        2000  -.28639841  -.05879128   .14496744        4341        6158
r30           1        2001  -.29252934  -.06355977   .14062047        3832        5463
r31           1        2002  -.29370284  -.06047928   .15275049        3447        4781
r32           1        2003  -.62991714  -.37288094  -.15223145        3141        4315
r33           1        2004  -.64003325  -.37860441  -.15334964        2976        4165
r34           1        2005  -.63497305  -.37717056  -.15219772        2621        3458
r35           1        2006  -.64781618   -.3872782  -.15874076        2716        3342
r36           1        2007    -.656353  -.39618635  -.16419387        2833        3384
r37           1        2008  -.65897512  -.39939213   -.1621443        3081        3500
r38           1        2009  -.65438795  -.39665174  -.16188514        3054        3377
r39           1        2010  -.01246876   .20381832   .41867042        3176        3737
r40           1        2011  -.00595238   .20657802   .41889167        3379        3540
r41           1        2012   .00320196   .21099138   .42259955        3408        3333
r42           1        2013   .00771999   .21193707   .41979671        3696        3486
r43           1        2014   .01019529   .21371865   .42361736        4068        3631
r44           1        2015   .01505575   .21677613   .42573571        4484        3597
r45           1        2016   .01691629   .21732903   .42479491        5298        4548
r46           1        2017   .01864618   .21877301   .42453146        6641       26352

. display "Ausgabe der Perzentile der nicht firmen-spezifischen Lohnanteile"
Ausgabe der Perzentile der nicht firmen-spezifischen Lohnanteile

. matrix list m_pct_nfw

m_pct_nfw[46,7]
           east        year         p15         p50         p85    n_persnr      n_betr
 r1           0        1995  -1103.6331  -336.95068   1205.2598       35221       14483
 r2           0        1996  -1085.0729  -321.65833   1181.3329       26047       13942
 r3           0        1997  -1094.8665  -334.75659   1185.3064       21828       14129
 r4           0        1998  -1132.0979  -356.39761    1216.613       19789       14286
 r5           0        1999  -1169.4584  -366.82211   1236.1206       18437       15180
 r6           0        2000  -1181.1328  -372.07617   1237.6353       17947       16296
 r7           0        2001  -1196.1525  -375.70306   1246.7754       17202       16401
 r8           0        2002  -1230.6379  -392.85898   1259.2151       15915       15681
 r9           0        2003  -1281.5667  -403.99039   1339.0779       14576       13964
r10           0        2004  -1278.5051  -406.86575   1308.4333       13845       13362
r11           0        2005  -1296.6107  -413.49109   1318.4491       12878       11894
r12           0        2006  -1294.0497  -403.49084   1299.0518       13370       12335
r13           0        2007  -1291.6934  -395.36346   1280.9341       14111       12599
r14           0        2008  -1290.5139    -389.522   1267.6415       14477       13305
r15           0        2009  -1313.3175  -400.00488   1303.1406       14035       12642
r16           0        2010  -1361.0288  -410.84354    1322.813       14744       13373
r17           0        2011  -1343.7908  -394.91037   1311.3599       15680       13232
r18           0        2012  -1331.7217  -395.21143   1317.7856       16743       12893
r19           0        2013  -1330.9956  -394.31949   1326.5519       17680       13147
r20           0        2014  -1347.2877  -399.01584   1349.7397       19334       13762
r21           0        2015  -1359.1343  -401.71579   1356.1334       22048       14548
r22           0        2016  -1362.3822  -401.65198   1373.9127       26192       18575
r23           0        2017  -1372.3936   -404.7312   1390.8411       34183      111516
r24           1        1995  -729.85791  -203.13713   758.65491       10383        6755
r25           1        1996  -712.27509   -207.1837   750.61346        7530        6362
r26           1        1997  -692.76459  -212.53299   738.19543        5959        6190
r27           1        1998  -699.88531  -217.01357   744.51947        5137        5912
r28           1        1999  -723.38312   -223.2117   761.73785        4708        6075
r29           1        2000  -732.70984  -224.59854   763.57703        4341        6158
r30           1        2001  -751.78296  -232.85124   802.43848        3832        5463
r31           1        2002  -784.39423  -239.82932   807.49701        3447        4781
r32           1        2003  -849.67578  -254.72256   884.65686        3141        4315
r33           1        2004  -834.96674  -250.61946   876.64453        2976        4165
r34           1        2005  -849.15607  -257.69702   887.72076        2621        3458
r35           1        2006  -839.02222  -252.75473   851.91608        2716        3342
r36           1        2007  -828.97522  -252.27859    857.1676        2833        3384
r37           1        2008  -823.12335  -244.54753   830.46588        3081        3500
r38           1        2009  -851.37012  -252.92833   857.11969        3054        3377
r39           1        2010  -872.87177  -242.96652   829.49634        3176        3737
r40           1        2011  -854.57465  -245.71143   848.69305        3379        3540
r41           1        2012  -845.68311  -249.12312   825.51556        3408        3333
r42           1        2013  -834.16565  -250.16669   840.00177        3696        3486
r43           1        2014  -853.49225  -253.83893   851.11908        4068        3631
r44           1        2015  -846.73285  -250.13911    858.5047        4484        3597
r45           1        2016  -862.16742  -251.22484   888.12256        5298        4548
r46           1        2017  -881.46375  -265.40887   921.00043        6641       26352

. display "Ausgabe der Perzentile der firmen-spezifischen Lohnanteile"
Ausgabe der Perzentile der firmen-spezifischen Lohnanteile

. matrix list m_pct_fw

m_pct_fw[46,7]
          east       year        p15        p50        p85   n_persnr     n_betr
 r1          0       1995  3113.5007   3829.967  4477.6025      35221      14483
 r2          0       1996  3058.6877  3680.4771  4473.9282      26047      13942
 r3          0       1997  3153.0503  3684.8923  4467.5728      21828      14129
 r4          0       1998  3150.1863   3760.884  4566.4531      19789      14286
 r5          0       1999  2967.0671  3821.7522  4652.8745      18437      15180
 r6          0       2000  2937.8958  3864.9089  4736.0537      17947      16296
 r7          0       2001  2911.4661  3871.6909  4781.8892      17202      16401
 r8          0       2002  3103.6331  3923.9297  4852.2969      15915      15681
 r9          0       2003  3145.5974  3999.4175  4964.9722      14576      13964
r10          0       2004  2837.8193  3974.7351  4844.5366      13845      13362
r11          0       2005  3012.3096  3826.4233   4934.686      12878      11894
r12          0       2006  2971.9207  3795.3494  5021.7065      13370      12335
r13          0       2007  2739.9058  3734.1462  5045.1401      14111      12599
r14          0       2008  2543.3499  3728.3506  5010.6279      14477      13305
r15          0       2009  2595.7954  3756.5276  4983.9375      14035      12642
r16          0       2010  2516.5598   3808.551  5013.5063      14744      13373
r17          0       2011  2804.6636   3932.074  5067.6382      15680      13232
r18          0       2012  2522.0574  4075.3259   5087.043      16743      12893
r19          0       2013  2575.0239  3840.2756   5121.209      17680      13147
r20          0       2014   2592.502  3873.1028  5210.9395      19334      13762
r21          0       2015  2598.5884  3926.5515  5288.6235      22048      14548
r22          0       2016  2610.6353  3925.2144  5243.9688      26192      18575
r23          0       2017  2643.4858  4110.6279  5305.7388      34183     111516
r24          1       1995  2105.1633  2561.4209  3225.6882      10383       6755
r25          1       1996  1966.1058  2526.5239  3340.9531       7530       6362
r26          1       1997  1923.0492  2479.3408   3330.895       5959       6190
r27          1       1998  1886.0713  2568.4907  3376.2705       5137       5912
r28          1       1999  1876.4371  2498.6057   3447.335       4708       6075
r29          1       2000  1855.1465   2508.314  3492.7454       4341       6158
r30          1       2001  1849.2673  2666.2905  3509.3149       3832       5463
r31          1       2002  1882.2605  2661.7417  3689.7483       3447       4781
r32          1       2003  1897.7202  2628.1941  3779.8291       3141       4315
r33          1       2004  1794.5339  2645.4097  3759.0525       2976       4165
r34          1       2005  1799.6801  2593.2104  3787.0078       2621       3458
r35          1       2006  1722.2532  2622.6829  3729.0166       2716       3342
r36          1       2007  1685.0806  2464.9697  3641.4512       2833       3384
r37          1       2008  1661.9945  2453.3442   3651.856       3081       3500
r38          1       2009  1693.0812  2491.3069  3770.6189       3054       3377
r39          1       2010  1733.1981  2517.6624  3636.6646       3176       3737
r40          1       2011  1841.0076  2662.7617  3665.9541       3379       3540
r41          1       2012  1736.5498  2571.5806  3663.7209       3408       3333
r42          1       2013  1797.9982  2622.4351   3697.542       3696       3486
r43          1       2014  1852.7705  2624.5522  3810.7295       4068       3631
r44          1       2015  1938.7059  2688.4426  3822.8062       4484       3597
r45          1       2016  1972.8295  2717.6433  3894.9819       5298       4548
r46          1       2017   2033.905  2786.0657  3964.9526       6641      26352

. 
. 
. foreach name of global g_vars{
  2.         display _newline
  3.         display "Ausgabe der DFL-gewichteten Perzentile mit Gewichtung nach `name'"
  4.         display ". matrix list m_p_dfl_`name'"
  5.         matrix list m_p_dfl_`name'
  6. }


Ausgabe der DFL-gewichteten Perzentile mit Gewichtung nach occ3
. matrix list m_p_dfl_occ3

m_p_dfl_occ3[46,7]
          east       year        p15        p50        p85   n_persnr     n_betr
 r1          0       1995    2525.55  3385.2559  5133.2178      35221      14483
 r2          0       1996  2517.7932  3374.4292  5131.7051      26047      13942
 r3          0       1997  2483.9622  3337.6438  5109.4565      21828      14129
 r4          0       1998  2481.0737  3351.0298  5169.5054      19789      14286
 r5          0       1999   2485.896  3387.7671  5259.6387      18437      15180
 r6          0       2000  2476.1819  3398.9351   5287.042      17947      16296
 r7          0       2001  2461.2014  3382.3098  5292.2759      17202      16401
 r8          0       2002  2467.3528  3403.1987   5330.125      15915      15681
 r9          0       2003  2467.5398  3416.1602  5416.8745      14576      13964
r10          0       2004  2409.8335  3379.1277  5394.5933      13845      13362
r11          0       2005  2372.7034  3356.4509  5395.2134      12878      11894
r12          0       2006  2326.2874  3338.6753  5415.2422      13370      12335
r13          0       2007  2271.9341  3309.2739  5417.7427      14111      12599
r14          0       2008  2235.0586  3287.6741  5385.8135      14477      13305
r15          0       2009  2246.9092  3277.0437  5382.2012      14035      12642
r16          0       2010  2233.3762  3306.3352  5439.1934      14744      13373
r17          0       2011  2106.9988  3229.5408  5259.8975      15680      13232
r18          0       2012   2195.519  3278.3096   5370.124      16743      12893
r19          0       2013  2217.5415  3310.9705  5411.9507      17680      13147
r20          0       2014  2231.1816  3356.9023  5503.7866      19334      13762
r21          0       2015   2236.645  3380.9375  5561.9707      22048      14548
r22          0       2016  2264.0945  3410.8521  5626.3848      26192      18575
r23          0       2017  2283.6003  3438.6006  5676.2998      34183     111516
r24          1       1995  1723.2194  2363.6143  3612.6653      10383       6755
r25          1       1996  1720.4927  2383.1475  3670.6958       7530       6362
r26          1       1997  1701.9669   2355.884  3673.9702       5959       6190
r27          1       1998   1683.374  2345.8086  3709.3242       5137       5912
r28          1       1999  1686.2983  2354.7507   3793.978       4708       6075
r29          1       2000  1682.1873  2345.1467  3829.3325       4341       6158
r30          1       2001  1680.9581  2335.1006  3850.3188       3832       5463
r31          1       2002    1692.72  2368.4529  3952.6296       3447       4781
r32          1       2003  1694.6704  2369.4551  4010.6208       3141       4315
r33          1       2004  1652.3196  2345.2383  3961.3943       2976       4165
r34          1       2005  1643.3417  2337.7744  3955.3391       2621       3458
r35          1       2006  1601.8428  2305.0352  3919.2715       2716       3342
r36          1       2007  1578.7126  2277.0154  3894.4629       2833       3384
r37          1       2008  1559.1232  2261.4749  3882.9089       3081       3500
r38          1       2009  1574.1923  2277.6951  3976.8608       3054       3377
r39          1       2010  1564.5552  2266.8267   4043.968       3176       3737
r40          1       2011  1538.7192  2228.0505   3949.103       3379       3540
r41          1       2012  1608.8018  2300.4136  3974.2544       3408       3333
r42          1       2013  1628.4521  2317.0413  3968.3328       3696       3486
r43          1       2014  1659.4773  2352.2964  4041.0859       4068       3631
r44          1       2015  1716.1991  2384.0464   4116.502       4484       3597
r45          1       2016   1769.834  2446.2393  4170.1533       5298       4548
r46          1       2017     1814.7       2505     4240.5       6641      26352


Ausgabe der DFL-gewichteten Perzentile mit Gewichtung nach construction
. matrix list m_p_dfl_construction

m_p_dfl_construction[46,7]
          east       year        p15        p50        p85   n_persnr     n_betr
 r1          0       1995    2525.55  3385.2559  5133.2178      35221      14483
 r2          0       1996  2515.3188  3370.4504  5104.5981      26047      13942
 r3          0       1997  2480.0198   3338.271  5094.9468      21828      14129
 r4          0       1998  2480.8716  3363.5278  5209.9331      19789      14286
 r5          0       1999  2478.9299  3399.9141  5319.1592      18437      15180
 r6          0       2000  2462.3447  3408.9417  5345.5239      17947      16296
 r7          0       2001  2443.4866   3395.271  5360.4126      17202      16401
 r8          0       2002  2450.0974  3424.8943  5419.5356      15915      15681
 r9          0       2003  2449.8894  3439.2925  5541.2773      14576      13964
r10          0       2004  2384.5774  3396.8464  5513.5894      13845      13362
r11          0       2005  2350.8643  3384.7283  5549.6782      12878      11894
r12          0       2006  2295.1631  3359.9243  5558.7729      13370      12335
r13          0       2007  2225.1763  3322.6265  5545.9268      14111      12599
r14          0       2008  2189.3625  3303.7666   5510.564      14477      13305
r15          0       2009  2216.5002  3314.2988  5561.6494      14035      12642
r16          0       2010  2186.1118   3331.071  5606.6655      14744      13373
r17          0       2011  2179.2842  3327.7195  5618.6685      15680      13232
r18          0       2012  2196.7402  3333.7722    5627.52      16743      12893
r19          0       2013  2222.8657  3364.5239   5676.876      17680      13147
r20          0       2014  2242.6714  3420.5935  5769.8716      19334      13762
r21          0       2015  2247.9348   3450.168   5834.501      22048      14548
r22          0       2016  2267.3098  3474.9622  5897.4243      26192      18575
r23          0       2017  2272.1997  3497.3987  5932.1997      34183     111516
r24          1       1995  1723.2194  2363.6143  3612.6653      10383       6755
r25          1       1996  1717.2347  2378.1709  3658.0627       7530       6362
r26          1       1997  1696.9395   2347.344   3658.792       5959       6190
r27          1       1998  1682.0695  2340.8252  3714.0322       5137       5912
r28          1       1999  1681.0502  2342.3816  3786.4561       4708       6075
r29          1       2000  1677.5758  2333.4575  3835.8147       4341       6158
r30          1       2001  1676.3748  2323.8772  3862.0486       3832       5463
r31          1       2002  1691.3259  2359.1125  3976.4529       3447       4781
r32          1       2003  1688.6383  2348.6694   4013.594       3141       4315
r33          1       2004  1640.6263   2318.678  3940.1609       2976       4165
r34          1       2005  1637.4041  2315.4355  3960.4048       2621       3458
r35          1       2006  1591.9609   2278.887  3898.4128       2716       3342
r36          1       2007  1559.8151  2239.3855  3866.3325       2833       3384
r37          1       2008  1540.4115  2223.9797  3855.3896       3081       3500
r38          1       2009  1557.4312  2242.0962   3965.019       3054       3377
r39          1       2010  1538.1954  2222.4236  4002.6045       3176       3737
r40          1       2011  1570.3342  2240.3232  3989.6548       3379       3540
r41          1       2012   1597.901  2266.3682  4006.8765       3408       3333
r42          1       2013  1623.0918  2293.1316  4017.4333       3696       3486
r43          1       2014  1654.6329  2350.0889  4111.9253       4068       3631
r44          1       2015  1717.7301  2401.6978  4211.0166       4484       3597
r45          1       2016  1757.7742   2445.832  4273.5688       5298       4548
r46          1       2017  1804.1995  2499.5984  4338.6001       6641      26352

. 
. display "Ausgabe der DFL-gewichteten Perzentile mit Gewichtung nach 3-Steller Beruf und Bau-Sektor"
Ausgabe der DFL-gewichteten Perzentile mit Gewichtung nach 3-Steller Beruf und Bau-Sektor

. matrix list m_p_dfl_const_occ

m_p_dfl_const_occ[46,7]
          east       year        p15        p50        p85   n_persnr     n_betr
 r1          0       1995    2525.55  3385.2559  5133.2178      35221      14483
 r2          0       1996  2517.7932  3374.1604  5131.6782      26047      13942
 r3          0       1997  2483.8154  3337.2141  5109.3662      21828      14129
 r4          0       1998  2480.8384   3350.095  5168.9683      19789      14286
 r5          0       1999  2485.6875  3386.7817  5259.1953      18437      15180
 r6          0       2000  2476.1726  3397.6338  5286.3364      17947      16296
 r7          0       2001  2460.7236  3380.6443  5291.9502      17202      16401
 r8          0       2002  2466.9751  3401.3411   5328.834      15915      15681
 r9          0       2003   2467.021  3413.6621  5415.0405      14576      13964
r10          0       2004  2409.4739  3376.0417  5392.2144      13845      13362
r11          0       2005  2371.8911  3351.9182  5392.9907      12878      11894
r12          0       2006  2325.5977  3334.0281   5412.627      13370      12335
r13          0       2007  2271.9341  3305.4114  5415.3843      14111      12599
r14          0       2008   2234.738  3283.5146   5384.249      14477      13305
r15          0       2009  2246.5759  3273.1331  5380.5332      14035      12642
r16          0       2010  2233.1912  3301.7083  5437.6113      14744      13373
r17          0       2011  2107.2971  3227.5964  5257.4448      15680      13232
r18          0       2012  2195.6426  3276.3264  5368.6626      16743      12893
r19          0       2013  2217.5415  3308.7214  5410.7769      17680      13147
r20          0       2014  2231.2178  3354.9563  5502.4268      19334      13762
r21          0       2015  2236.6206  3379.1001  5560.4482      22048      14548
r22          0       2016  2264.0945  3409.2244  5624.5527      26192      18575
r23          0       2017  2283.6003  3436.8005  5674.7979      34183     111516
r24          1       1995  1723.2194  2363.6143  3612.6653      10383       6755
r25          1       1996  1720.5706  2382.7917  3670.6958       7530       6362
r26          1       1997  1702.2112  2355.0742  3673.1611       5959       6190
r27          1       1998  1683.7803  2343.5815  3707.2095       5137       5912
r28          1       1999  1687.1992  2350.9014  3789.7361       4708       6075
r29          1       2000  1684.1906  2339.3823  3824.4092       4341       6158
r30          1       2001  1684.7344  2328.5103  3842.8884       3832       5463
r31          1       2002  1696.0658   2356.749  3942.3879       3447       4781
r32          1       2003   1699.803  2357.7449  3999.3691       3141       4315
r33          1       2004  1656.5884  2334.2556  3945.5813       2976       4165
r34          1       2005  1647.6675  2323.2534  3936.4595       2621       3458
r35          1       2006  1610.0189  2293.6096  3897.3513       2716       3342
r36          1       2007  1584.9612  2263.5354  3877.0994       2833       3384
r37          1       2008  1567.0564  2249.2009  3870.1433       3081       3500
r38          1       2009  1579.9028  2263.4578  3960.2251       3054       3377
r39          1       2010  1569.2156  2254.9751   4028.085       3176       3737
r40          1       2011  1543.7329  2221.2678  3934.2827       3379       3540
r41          1       2012   1610.925  2284.7646  3949.2026       3408       3333
r42          1       2013   1631.036  2299.8694  3940.4727       3696       3486
r43          1       2014  1664.2191  2339.0166  4018.9851       4068       3631
r44          1       2015  1716.1991  2384.0464  4095.5369       4484       3597
r45          1       2016  1772.3379  2432.7212  4150.4092       5298       4548
r46          1       2017  1816.4999     2493.3  4214.0981       6641      26352

. 
. cap log close
